name: Build and Deploy Monitoring Stack to Raspberry Pi (develop)

on:
  push:
    branches:
      - develop
    paths:
      - 'scripts/monitoring/**'
    pull_request:
      branches:
        - develop
      paths:
        - 'scripts/monitoring/**'

jobs:
  # Job: 모니터링 스택 배포
  deploy-monitoring:
    # 라즈베리파이 배포 시 동시 실행 방지
    concurrency:
      group: raspberry-pi-deploy
      cancel-in-progress: false
    name: Deploy Monitoring Stack to Raspberry Pi
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # 모니터링 번들 패키징
      - name: Package monitoring bundle
        run: tar -czf monitoring.tar.gz -C scripts/monitoring docker-compose.dev.yml grafana prometheus

      # 라즈베리(DEV)로 배포
      - name: Deploy monitoring to Raspberry Pi
        env:
          HOST: ${{ secrets.RASPBERRY_PI_HOST }}
          USER: ${{ secrets.RASPBERRY_PI_USER }}
          PASSWORD: ${{ secrets.RASPBERRY_PI_PASSWORD }}
          PORT: ${{ secrets.RASPBERRY_PI_PORT }}
        run: |
          sudo apt-get update && sudo apt-get install -y sshpass
          sshpass -p "$PASSWORD" ssh -p "$PORT" -o StrictHostKeyChecking=no $USER@$HOST "mkdir -p ~/inhu-monitoring"
          sshpass -p "$PASSWORD" scp -P "$PORT" -o StrictHostKeyChecking=no monitoring.tar.gz $USER@$HOST:~/inhu-monitoring/
          sshpass -p "$PASSWORD" ssh -p "$PORT" -o StrictHostKeyChecking=no $USER@$HOST "bash -s" << 'EOF'
            set -e
            cd ~/inhu-monitoring
            tar -xzf monitoring.tar.gz && rm monitoring.tar.gz
            docker compose -f docker-compose.dev.yml --env-file $HOME/inhu-backend/.env.admin up -d --pull always --remove-orphans --project-name inhu-monitoring
          EOF
