name: Deploy to Development

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  # 1. 변경된 파일 감지
  check-changes:
    name: Check for Changes
    runs-on: ubuntu-latest
    outputs:
      should_deploy: ${{ steps.deployment-gate.outputs.any_modified }}
      should_db_down: ${{ steps.db-check.outputs.any_modified }}
      user_changed: ${{ steps.user-filter.outputs.any_modified }}
      admin_changed: ${{ steps.admin-filter.outputs.any_modified }}
      batch_changed: ${{ steps.batch-filter.outputs.any_modified }}
      dependency_changed: ${{ steps.dependency-check.outputs.any_modified }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # User 서버 변경 감지
      - name: Check for User Service Changes
        id: user-filter
        uses: tj-actions/changed-files@v44
        with:
          files: |
            apps/user-server/**
            libs/**
          files_ignore: |
            **/*.md
            libs/testing/**

      # Admin 서버 변경 감지
      - name: Check for Admin Service Changes
        id: admin-filter
        uses: tj-actions/changed-files@v44
        with:
          files: |
            apps/admin-server/**
            libs/**
          files_ignore: |
            **/*.md
            libs/testing/**

      # Batch 서버 변경 감지
      - name: Check for Batch Service Changes
        id: batch-filter
        uses: tj-actions/changed-files@v44
        with:
          files: |
            apps/batch-server/**
            libs/**
          files_ignore: |
            **/*.md
            libs/testing/**

      # package.json  변경 감지
      - name: Check for dependency Changes
        id: dependency-check
        uses: tj-actions/changed-files@v44
        with:
          files: |
            package.json
            package-lock.json

      # 실제 배포 트리거 파일 변경 감지
      - name: Check for deployable Changes
        id: deployment-gate
        uses: tj-actions/changed-files@v44
        with:
          files: |
            .github/workflows/deploy-dev-infra.yml
            .github/workflows/deploy-dev-user.yml
            .github/workflows/deploy-dev-admin.yml
            .github/workflows/deploy-dev-batch.yml
            .github/workflows/scripts/deploy-dev-infra-script.sh
            .github/workflows/scripts/deploy-dev-service-script.sh
            apps/**/src/**
            libs/**
            prisma/**
            scripts/dev-infra/**
            scripts/rdb/**
          files_ignore: |
            libs/testing/**
            **/*.md

      # DB infra 관련 변경 감지
      - name: Check for database infrastructure Changes
        id: db-check
        uses: tj-actions/changed-files@v44
        with:
          files: |
            scripts/dev-infra/**
            scripts/rdb/**
            prisma/**

      - name: echo outputs for debugging
        run: |
          echo "user_changed=${{ steps.user-filter.outputs.any_modified }}"
          echo "admin_changed=${{ steps.admin-filter.outputs.any_modified }}"
          echo "batch_changed=${{ steps.batch-filter.outputs.any_modified }}"
          echo "should_deploy=${{ steps.deployment-gate.outputs.any_modified }}"
          echo "should_db_down=${{ steps.db-check.outputs.any_modified }}"
          echo "Deployment gate outputs: ${{ toJSON(steps.deployment-gate.outputs) }}"
          echo "DB check outputs: ${{ toJSON(steps.db-check.outputs) }}"

  # 2. 테스트
  test-services:
    name: Run E2E Tests
    needs: check-changes
    if: github.event_name == 'pull_request' || github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run E2E tests for User Server
        if: needs.check-changes.outputs.user_changed == 'true'
        run: |
          echo "User service changes detected, running tests..."
          npm run user-server:test:infra:up
          npm run user-server:test:e2e
          npm run user-server:test:infra:down

      - name: Run E2E tests for Admin Server
        if: needs.check-changes.outputs.admin_changed == 'true'
        run: |
          echo "Admin service changes detected, running tests..."
          npm run admin-server:test:infra:up
          npm run admin-server:test:e2e
          npm run admin-server:test:infra:down

      - name: Run E2E tests for Batch Server
        if: needs.check-changes.outputs.batch_changed == 'true'
        run: |
          echo "Batch service changes detected, running tests..."
          npm run batch-server:test:infra:up
          npm run batch-server:test:e2e
          npm run batch-server:test:infra:down

  # 3. 공통 작업 실행 (DB reset, seed, npm ci)
  run-common-tasks:
    name: Run Common tasks
    needs: [check-changes, test-services]
    if: github.event_name == 'push' && needs.check-changes.outputs.should_deploy == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build seed
        run: npm run build:seed

      - name: Execute common tasks on server
        env:
          HOST: ${{ secrets.RASPBERRY_PI_HOST }}
          USER: ${{ secrets.RASPBERRY_PI_USER }}
          PASSWORD: ${{ secrets.RASPBERRY_PI_PASSWORD }}
          PORT: ${{ secrets.RASPBERRY_PI_PORT }}
          DB_DOWN: ${{ needs.check-changes.outputs.should_db_down }}
          USER_CHANGED: ${{ needs.check-changes.outputs.user_changed }}
          ADMIN_CHANGED: ${{ needs.check-changes.outputs.admin_changed }}
          BATCH_CHANGED: ${{ needs.check-changes.outputs.batch_changed }}
          DEPENDENCY_CHANGED: ${{ needs.check-changes.outputs.dependency_changed }}

        run: |
          sudo apt-get update || (sudo apt-get update && sudo apt-get install -y sshpass)

          tar -czf infra-bundle.tar.gz \
            package.json package-lock.json \
            prisma scripts \
            dist/scripts/dev-infra/seed \
            .github/workflows/scripts/deploy-dev-infra-script.sh

          sshpass -p "$PASSWORD" scp -P "$PORT" -o StrictHostKeyChecking=no infra-bundle.tar.gz $USER@$HOST:~/inhu-backend/

          sshpass -p "$PASSWORD" ssh -p "$PORT" -o StrictHostKeyChecking=no $USER@$HOST "
          cd ~/inhu-backend && \
          tar -xzf infra-bundle.tar.gz && \
          rm infra-bundle.tar.gz && \
          chmod +x .github/workflows/scripts/deploy-dev-infra-script.sh && \
          DB_DOWN_FLAG='$DB_DOWN' USER_CHANGED='$USER_CHANGED' ADMIN_CHANGED='$ADMIN_CHANGED' BATCH_CHANGED='$BATCH_CHANGED' DEPENDENCY_CHANGED='$DEPENDENCY_CHANGED' \
          ./.github/workflows/scripts/deploy-dev-infra-script.sh
          "

  # 3. 서비스별 워크플로우 호출
  call-user-workflow:
    name: Trigger User workflow
    needs: [check-changes, run-common-tasks]
    if: github.event_name == 'push' && needs.check-changes.outputs.user_changed == 'true'
    uses: ./.github/workflows/deploy-dev-user.yml
    secrets: inherit

  call-admin-workflow:
    name: Trigger Admin workflow
    needs: [check-changes, run-common-tasks]
    if: github.event_name == 'push' && needs.check-changes.outputs.admin_changed == 'true'
    uses: ./.github/workflows/deploy-dev-admin.yml
    secrets: inherit

  call-batch-workflow:
    name: Trigger Batch workflow
    needs: [check-changes, run-common-tasks]
    if: github.event_name == 'push' && needs.check-changes.outputs.batch_changed == 'true'
    uses: ./.github/workflows/deploy-dev-batch.yml
    secrets: inherit
