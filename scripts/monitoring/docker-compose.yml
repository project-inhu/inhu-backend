name: inhu-monitoring

services:
  prometheus:
    image: prom/prometheus
    container_name: inhu-prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/config/rule.yml:/etc/prometheus/config/rule.yml
      - inhu-dev-prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - inhu-dev-network

  grafana:
    image: grafana/grafana
    container_name: inhu-grafana
    ports:
      - '3030:3000'
    volumes:
      - inhu-dev-grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    networks:
      - inhu-dev-network

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    restart: unless-stopped
    network_mode: host
    pid: host
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|mnt/wslg/.+)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: inhu-dev-postgres-exporter
    environment:
      - DATA_SOURCE_NAME=postgresql://postgres:1234@inhu-dev-postgres:5432/postgres?sslmode=disable
    ports:
      - '9187:9187'
    networks:
      - inhu-dev-network
    depends_on:
      - postgres

  redis-exporter:
    image: oliver006/redis_exporter
    container_name: inhu-dev-redis-exporter
    ports:
      - '9121:9121'
    networks:
      - inhu-dev-network
    depends_on:
      - redis
