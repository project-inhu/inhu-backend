name: inhu-monitoring-prod

services:
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    ports:
      - '${PROM_HOST}:${PROM_PORT}:9090'
    volumes:
      - ${PROM_CONFIG_FILE}:/etc/prometheus/prometheus.yml
      - ./prometheus/config/rule.yml:/etc/prometheus/config/rule.yml
      - prom-data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=15d
      - --web.enable-lifecycle
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks: [monitor-net]

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    ports:
      - '${GRAFANA_HOST}:${GRAFANA_PORT}:3000'
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on: [prometheus]
    networks: [monitor-net]

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    restart: unless-stopped
    pid: host
    command:
      - --path.procfs=/host/proc
      - --path.rootfs=/rootfs
      - --path.sysfs=/host/sys
      - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|mnt/wslg/.+)($$|/)
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks: [monitor-net]

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres-exporter
    restart: unless-stopped
    environment:
      - DATA_SOURCE_NAME=${PG_DSN}
    network_mode: host

  redis-exporter:
    image: oliver006/redis_exporter
    container_name: redis-exporter
    restart: unless-stopped
    command:
      - --redis.addr=${REDIS_ADDR}
    network_mode: host

volumes:
  prom-data:
  grafana-data:

networks:
  monitor-net:
